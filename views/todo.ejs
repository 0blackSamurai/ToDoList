<%- include('./partials/header') %>

<div class="date-navigation">
    <a href="/<%= prevDate %>" class="btn btn-small" aria-label="Previous day">
        <i class="fas fa-chevron-left"></i> Previous Day
    </a>
    
    <h1><%= title %></h1>
    
    <a href="/<%= nextDate %>" class="btn btn-small" aria-label="Next day">
        Next Day <i class="fas fa-chevron-right"></i>
    </a>
</div>

<!-- Week Navigation -->
<div class="week-navigation">
    <div class="week-controls">
        <button id="prev-week" class="btn btn-small">
            <i class="fas fa-chevron-left"></i> Previous Week
        </button>
        <span id="week-display">Week <%= weekNumber %>, <%= weekYear %></span>
        <button id="next-week" class="btn btn-small">
            Next Week <i class="fas fa-chevron-right"></i>
        </button>
    </div>
    
    <div class="weekday-selector">
        <% weekDays.forEach(day => { %>
            <a href="/<%= day.date %>" class="weekday-item <%= day.isCurrentDay ? 'current-day' : '' %> <%= day.isToday ? 'today' : '' %>">
                <div class="weekday-name"><%= day.weekdayShort %></div>
                <div class="weekday-date"><%= day.dayNumber %></div>
                <div class="weekday-todo-count"><%= day.todoCount || '' %></div>
                <div class="weekday-debug" style="display: none;"><%= day.date %></div>
            </a>
        <% }) %>
    </div>
</div>

<form class="todo-form" action="/todo" method="POST">
    <h2>Add New Todo</h2>
    
    <div class="form-group">
        <label for="title">Title</label>
        <input type="text" id="title" name="title" required aria-label="Todo title">
    </div>
    
    <div class="form-group">
        <label for="description">Description (Optional)</label>
        <textarea id="description" name="description" aria-label="Todo description"></textarea>
    </div>
    
    <div class="form-group">
        <label for="date">Date</label>
        <input type="date" id="date" name="date" value="<%= currentDate %>" required aria-label="Todo date">
    </div>
    
    <button type="submit" class="btn">Add Todo</button>
</form>

<!-- Rest of your existing code remains the same -->

<div class="todos-container">
    <div class="todos-header">
        <h2>Your Todos for <%= isToday ? 'Today' : currentDate %></h2>
        <button id="show-all-todos" class="btn btn-small">Show All Todos</button>
    </div>

    <% if (todos.length === 0) { %>
        <p id="no-todos-message">No todos for this day. Add a new todo above!</p>
    <% } else { %>
        <ul class="todo-list" id="current-day-todos">
            <% todos.forEach(todo => { %>
                <li class="todo-item <%= todo.completed ? 'completed' : '' %>" data-id="<%= todo._id %>">
                    <div class="todo-text">
                        <h3 class="todo-title"><%= todo.title %></h3>
                        <% if (todo.description) { %>
                            <p class="todo-description"><%= todo.description %></p>
                        <% } %>
                    </div>
                    
                    <div class="todo-actions">
                        <button type="button" class="toggle-status" aria-label="<%= todo.completed ? 'Mark as incomplete' : 'Mark as complete' %>">
                            <i class="fas <%= todo.completed ? 'fa-undo' : 'fa-check' %>"></i>
                        </button>
                        
                        <button type="button" class="delete-todo" aria-label="Delete todo">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </li>
            <% }) %>
        </ul>
    <% } %>
    
    <div id="all-todos-section" style="display: none;">
        <h2>All Your Todos</h2>
        <div class="filter-controls">
            <button class="filter-btn active" data-filter="all">All</button>
            <button class="filter-btn" data-filter="pending">Pending</button>
            <button class="filter-btn" data-filter="completed">Completed</button>
        </div>
        <div id="all-todos-list">
            <p>Loading all todos...</p>
        </div>
    </div>
</div>

<style>
    .todos-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }
    
    .filter-controls {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
    }
    
    .filter-btn {
        background-color: #f1f1f1;
        color: #333;
        border: none;
        padding: 5px 10px;
        border-radius: 3px;
        cursor: pointer;
    }
    
    .filter-btn.active {
        background-color: #4a90e2;
        color: white;
    }
    
    .todo-date {
        font-size: 0.75rem;
        color: #666;
        margin-top: 5px;
    }
</style>

<% 
// Add custom scripts for this page
const scriptContent = `
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle todo status
        const toggleButtons = document.querySelectorAll('.toggle-status');
        toggleButtons.forEach(button => {
            button.addEventListener('click', async function() {
                const todoItem = this.closest('.todo-item');
                const todoId = todoItem.dataset.id;
                
                try {
                    const response = await fetch('/todo/' + todoId, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        // Toggle class on todo item
                        todoItem.classList.toggle('completed');
                        
                        // Update icon
                        const icon = this.querySelector('i');
                        if (result.completed) {
                            icon.className = 'fas fa-undo';
                            this.setAttribute('aria-label', 'Mark as incomplete');
                        } else {
                            icon.className = 'fas fa-check';
                            this.setAttribute('aria-label', 'Mark as complete');
                        }
                    }
                } catch (error) {
                    console.error('Error toggling todo status:', error);
                }
            });
        });
        
        // Delete todo
        const deleteButtons = document.querySelectorAll('.delete-todo');
        deleteButtons.forEach(button => {
            button.addEventListener('click', async function() {
                if (!confirm('Are you sure you want to delete this todo?')) {
                    return;
                }
                
                const todoItem = this.closest('.todo-item');
                const todoId = todoItem.dataset.id;
                
                try {
                    const response = await fetch('/todo/' + todoId, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        // Remove the todo item from the DOM
                        todoItem.remove();
                        
                        // If no todos left, show message
                        const todoList = document.querySelector('.todo-list');
                        if (todoList.children.length === 0) {
                            const noTodosMessage = document.createElement('p');
                            noTodosMessage.textContent = 'No todos for this day. Add a new todo above!';
                            todoList.parentNode.replaceChild(noTodosMessage, todoList);
                        }
                    }
                } catch (error) {
                    console.error('Error deleting todo:', error);
                }
            });
        });
        
        // Show all todos functionality
        const showAllTodosBtn = document.getElementById('show-all-todos');
        const allTodosSection = document.getElementById('all-todos-section');
        const currentDayTodos = document.getElementById('current-day-todos');
        const noTodosMessage = document.getElementById('no-todos-message');
        
        showAllTodosBtn.addEventListener('click', function() {
            if (allTodosSection.style.display === 'none') {
                // Show all todos
                allTodosSection.style.display = 'block';
                if (currentDayTodos) currentDayTodos.style.display = 'none';
                if (noTodosMessage) noTodosMessage.style.display = 'none';
                showAllTodosBtn.textContent = 'Show Today\\'s Todos';
                
                // Fetch all todos
                fetchAllTodos();
            } else {
                // Show today's todos
                allTodosSection.style.display = 'none';
                if (currentDayTodos) currentDayTodos.style.display = 'block';
                if (noTodosMessage) noTodosMessage.style.display = 'block';
                showAllTodosBtn.textContent = 'Show All Todos';
            }
        });
        // Add this to the existing script in todo.ejs before the closing script tag
// Inside your existing <script> block:

// Week navigation
const prevWeekBtn = document.getElementById('prev-week');
const nextWeekBtn = document.getElementById('next-week');

prevWeekBtn.addEventListener('click', function() {
    // Calculate date for the previous week
    const currentDate = new Date(document.getElementById('date').value);
    currentDate.setDate(currentDate.getDate() - 7);
    const formattedDate = currentDate.toISOString().split('T')[0];
    window.location.href = '/' + formattedDate;
});

nextWeekBtn.addEventListener('click', function() {
    // Calculate date for the next week
    const currentDate = new Date(document.getElementById('date').value);
    currentDate.setDate(currentDate.getDate() + 7);
    const formattedDate = currentDate.toISOString().split('T')[0];
    window.location.href = '/' + formattedDate;
});
        
        // Filter buttons for all todos
        const filterButtons = document.querySelectorAll('.filter-btn');
        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Update active button
                filterButtons.forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                
                // Apply filter
                const filter = this.dataset.filter;
                const todoItems = document.querySelectorAll('#all-todos-list .todo-item');
                
                todoItems.forEach(item => {
                    if (filter === 'all') {
                        item.style.display = '';
                    } else if (filter === 'pending' && !item.classList.contains('completed')) {
                        item.style.display = '';
                    } else if (filter === 'completed' && item.classList.contains('completed')) {
                        item.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                });
            });
        });
        
        // Function to fetch all todos
        async function fetchAllTodos() {
            try {
                const response = await fetch('/api/todos');
                const todos = await response.json();
                
                const allTodosList = document.getElementById('all-todos-list');
                
                if (todos.length === 0) {
                    allTodosList.innerHTML = '<p>You don\\'t have any todos yet.</p>';
                    return;
                }
                
                // Create HTML for todos
                let html = '<ul class="todo-list">';
                
                todos.forEach(todo => {
                    const date = new Date(todo.date).toLocaleDateString();
                    
                    html += \`
                        <li class="todo-item \${todo.completed ? 'completed' : ''}" data-id="\${todo._id}">
                            <div class="todo-text">
                                <h3 class="todo-title">\${todo.title}</h3>
                                <p class="todo-date">Due: \${date}</p>
                                \${todo.description ? \`<p class="todo-description">\${todo.description}</p>\` : ''}
                            </div>
                            
                            <div class="todo-actions">
                                <button type="button" class="toggle-status" aria-label="\${todo.completed ? 'Mark as incomplete' : 'Mark as complete'}">
                                    <i class="fas \${todo.completed ? 'fa-undo' : 'fa-check'}"></i>
                                </button>
                                
                                <button type="button" class="delete-todo" aria-label="Delete todo">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </li>
                    \`;
                });
                
                html += '</ul>';
                allTodosList.innerHTML = html;
                
                // Add event listeners to new buttons
                const newToggleButtons = allTodosList.querySelectorAll('.toggle-status');
                newToggleButtons.forEach(button => {
                    button.addEventListener('click', async function() {
                        const todoItem = this.closest('.todo-item');
                        const todoId = todoItem.dataset.id;
                        
                        try {
                            const response = await fetch('/todo/' + todoId, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });
                            
                            const result = await response.json();
                            
                            if (result.success) {
                                // Toggle class on todo item
                                todoItem.classList.toggle('completed');
                                
                                // Update icon
                                const icon = this.querySelector('i');
                                if (result.completed) {
                                    icon.className = 'fas fa-undo';
                                    this.setAttribute('aria-label', 'Mark as incomplete');
                                } else {
                                    icon.className = 'fas fa-check';
                                    this.setAttribute('aria-label', 'Mark as complete');
                                }
                            }
                        } catch (error) {
                            console.error('Error toggling todo status:', error);
                        }
                    });
                });
                
                const newDeleteButtons = allTodosList.querySelectorAll('.delete-todo');
                newDeleteButtons.forEach(button => {
                    button.addEventListener('click', async function() {
                        if (!confirm('Are you sure you want to delete this todo?')) {
                            return;
                        }
                        
                        const todoItem = this.closest('.todo-item');
                        const todoId = todoItem.dataset.id;
                        
                        try {
                            const response = await fetch('/todo/' + todoId, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });
                            
                            const result = await response.json();
                            
                            if (result.success) {
                                // Remove the todo item from the DOM
                                todoItem.remove();
                                
                                // If no todos left, show message
                                const allTodoItems = document.querySelectorAll('#all-todos-list .todo-item');
                                if (allTodoItems.length === 0) {
                                    allTodosList.innerHTML = '<p>You don\\'t have any todos yet.</p>';
                                }
                            }
                        } catch (error) {
                            console.error('Error deleting todo:', error);
                        }
                    });
                });
            } catch (error) {
                console.error('Error fetching all todos:', error);
                document.getElementById('all-todos-list').innerHTML = '<p>Error loading todos. Please try again.</p>';
            }
        }
    });
</script>
`;
%>


<%- include('./partials/footer', { scripts: scriptContent }) %>